import Head from "next/head";

import Grid from "@mui/material/Grid";
import Typography from "@mui/material/Typography";

import Editor from "@monaco-editor/react";
import { useEffect, useState } from "react";

import { serialize } from 'next-mdx-remote/serialize';
import { MDXRemote, MDXRemoteSerializeResult } from 'next-mdx-remote';
import remarkMath from 'remark-math';
import rehypeKatex from 'rehype-katex';

const components = { 
    h1: (props: any) => <Typography variant="h3" component="div" gutterBottom {...props} />
};

interface Create {

};

export default function Create(props: Create) {

    const [text, setText] = useState("");
    const [compiledText, setCompiledText] = useState<MDXRemoteSerializeResult | null>(null);

    const compileText = async () => {
        const contentJSXComplied = await serialize(
            text, 
            {
                scope: {},
                mdxOptions: {
                    remarkPlugins: [remarkMath],
                    rehypePlugins: [rehypeKatex],
                    format: 'mdx',
                    development: false
                },
                parseFrontmatter: false,
            }
        );
        return contentJSXComplied;
    };

    useEffect(() => {
        compileText().then(data => {
            return setCompiledText(data)
        })
    })

    return <>
        <Head>
            <title>Create</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
        </Head>
        <Grid container spacing={0} columns={{ xs: 4, md: 12 }}>
            <Grid item xs={4} md={6}>
                <Editor
                    height="90vh"
                    defaultLanguage="javascript"
                    defaultValue="// some comment"
                    // onChange={handleEditorChange as OnChange}
                />
            </Grid>
            <Grid item xs={4} md={6}>
                {
                    compiledText && <MDXRemote {...compiledText} components={components} />
                }
            </Grid>
        </Grid>
    </>
}